<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimpleSocket</name>
    </assembly>
    <members>
        <member name="T:SimpleSocket.Connection">
            <summary>
            A class representing a TCP connection between a local IP endpoint and a remote IP endpoint.
            </summary>
        </member>
        <member name="E:SimpleSocket.Connection.ConnectionFaulted">
            <summary>
            An event that is raised when the underlying connection goes into a faulted state.
            </summary>
        </member>
        <member name="M:SimpleSocket.Connection.#ctor(System.Net.Sockets.TcpClient,System.Boolean,SimpleSocket.IDatagramEmitter,Microsoft.Extensions.Logging.ILogger{SimpleSocket.Connection})">
            <summary>
            Initialized a new instance of the <see cref="T:SimpleSocket.Connection"/> class.
            </summary>
            <param name="clientSocket">The <see cref="T:System.Net.Sockets.TcpClient"/> to use as the underlying connection.</param>
            <param name="ownsTcpClient">A <see cref="T:System.Boolean"/> indicating whether the <paramref name="clientSocket"/> can be disposed when this instance is disposed or not.</param>
            <param name="datagramEmitter">A <see cref="T:SimpleSocket.IDatagramEmitter"/> that is used to emit received datagrams.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger`1"/> to use for logging information.</param>
        </member>
        <member name="P:SimpleSocket.Connection.IsFaulted">
            <summary>
            Gets a <see cref="T:System.Boolean"/> indicating whether the underlyiong socket is in a faulted state or not.
            </summary>
        </member>
        <member name="P:SimpleSocket.Connection.Name">
            <summary>
            Gets a <see cref="T:System.String"/> representing the name of this <see cref="T:SimpleSocket.Connection"/>. The name consists of the local and remote <see cref="T:System.Net.IPEndPoint"/>.
            </summary>
        </member>
        <member name="P:SimpleSocket.Connection.LocalEndPoint">
            <summary>
            The local <see cref="T:System.Net.IPEndPoint"/> that this connection is using.
            </summary>
        </member>
        <member name="P:SimpleSocket.Connection.RemoteEndPoint">
            <summary>
            The remote <see cref="T:System.Net.IPEndPoint"/> that this connection is connected to.
            </summary>
        </member>
        <member name="M:SimpleSocket.Connection.SendDatagramAsync(SimpleSocket.Datagram)">
            <summary>
            Sends a datagram to the remote host.
            </summary>
            <param name="datagram">The <see cref="T:SimpleSocket.Datagram"/> to send.</param>
        </member>
        <member name="M:SimpleSocket.Connection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:SimpleSocket.Connection.Finalize">
            <summary>
            Default destructor.
            </summary>
        </member>
        <member name="T:SimpleSocket.Datagram">
            <summary>
            A class representing a datagram that was received by a <see cref="T:SimpleSocket.Connection"/>.
            </summary>
        </member>
        <member name="P:SimpleSocket.Datagram.CommandType">
            <summary>
            The command type of the datagram. The specific value of <see cref="P:SimpleSocket.Datagram.CommandType"/> is application specific and should be consistent between applications communicating with eachother.
            </summary>
        </member>
        <member name="P:SimpleSocket.Datagram.Data">
            <summary>
            The user defined data that was sent or received.
            </summary>
        </member>
        <member name="M:SimpleSocket.Datagram.ToString">
            <summary>
            A string that represents the current object.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current object.</returns>
        </member>
        <member name="M:SimpleSocket.Datagram.ToString(System.Byte)">
            <summary>
            A string that represents the current object with the properties indented by <paramref name="numTabs"/> number of tabs."/>
            </summary>
            <param name="numTabs">The number of tab characters that each property line should be indented with.</param>
            <returns>A <see cref="T:System.String"/> that represents the current object with the properties indented by <paramref name="numTabs"/> number of tabs."/></returns>
        </member>
        <member name="T:SimpleSocket.IDatagramEmitter">
            <summary>
            An interface that rerpesents a datagram emitter to use for received datagrams.
            </summary>
        </member>
        <member name="M:SimpleSocket.IDatagramEmitter.DatagramReceived(SimpleSocket.Connection,SimpleSocket.Datagram,System.DateTime)">
            <summary>
            Called when a <see cref="T:SimpleSocket.Datagram"/> is received from the remote endpoint.
            </summary>
            <param name="source">The <see cref="T:SimpleSocket.Connection"/> which received the datagram.</param>
            <param name="datagram">The <see cref="T:SimpleSocket.Datagram"/> that was received.</param>
            <param name="receivedTime">The exact date and time the connection received the datagram.</param>
        </member>
    </members>
</doc>
